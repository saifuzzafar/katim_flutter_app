// Mocks generated by Mockito 5.4.0 from annotations
// in katim_app/test/usecases/get_event_list_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:katim_app/domain/entities/event_list_response.dart' as _i2;
import 'package:katim_app/domain/repository/events_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEventListResponse_0 extends _i1.SmartFake
    implements _i2.EventListResponse {
  _FakeEventListResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EventRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventRepository extends _i1.Mock implements _i3.EventRepository {
  MockEventRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.EventListResponse> getEventList({
    int? pageNumber,
    String? query,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventList,
          [],
          {
            #pageNumber: pageNumber,
            #query: query,
          },
        ),
        returnValue:
            _i4.Future<_i2.EventListResponse>.value(_FakeEventListResponse_0(
          this,
          Invocation.method(
            #getEventList,
            [],
            {
              #pageNumber: pageNumber,
              #query: query,
            },
          ),
        )),
      ) as _i4.Future<_i2.EventListResponse>);
  @override
  _i4.Future<bool> saveToFavourites(int? id) => (super.noSuchMethod(
        Invocation.method(
          #saveToFavourites,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> removeFromFavourites(int? id) => (super.noSuchMethod(
        Invocation.method(
          #removeFromFavourites,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<String> fetchFromFavourites(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchFromFavourites,
          [id],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  bool checkIfFavourite(int? id) => (super.noSuchMethod(
        Invocation.method(
          #checkIfFavourite,
          [id],
        ),
        returnValue: false,
      ) as bool);
}
